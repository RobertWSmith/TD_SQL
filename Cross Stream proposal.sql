SELECT
    I.FACILITY_ID
    , F.FACILITY_NAME

    , I.MATL_ID
    , M.MATL_NO_8
    , M.DESCR
    , M.PBU_NBR
    , M.PBU_NAME
    , M.MKT_AREA_NBR
    , M.MKT_AREA_NAME
    , M.MKT_GRP_NBR
    , M.MKT_GRP_NAME
    , M.PROD_LINE_NBR
    , M.PROD_LINE_NAME
    , M.PRTY_SRC_FACL_ID
    , M.PRTY_SRC_FACL_NM

    , FM.RORD_PT_QTY
    , FM.RND_RORD_QTY
    , FM.SAFE_STK_QTY
    , FM.AVAIL_CHK_GRP_CD
    , FM.MIN_SAFE_STK_QTY
    , FM.SPCL_PRCU_TYP_CD

    , ZEROIFNULL(PP.WK0_PLN_QTY) AS WK0_PLN_QTY
    , ZEROIFNULL(PP.WK1_PLN_QTY) AS WK1_PLN_QTY
    , ZEROIFNULL(PP.WK2_PLN_QTY) AS WK2_PLN_QTY

    , ZEROIFNULL(I.TOT_QTY) AS TOT_QTY
    , ZEROIFNULL(I.IN_TRANS_QTY) AS IN_TRANS_QTY
    , ZEROIFNULL(I.BLOCKED_STK_QTY) AS BLOCKED_STK_QTY
    , ZEROIFNULL(I.QUAL_INSP_QTY) AS QUAL_INSP_QTY
    , ZEROIFNULL(I.SAFE_STK_QTY) AS SAFE_STK_QTY
    , ZEROIFNULL(I.RSVR_QTY) AS RSVR_QTY
    , ZEROIFNULL(I.RSTR_QTY) AS RSTR_QTY
    , ZEROIFNULL(I.TOT_QTY) - (ZEROIFNULL(I.BLOCKED_STK_QTY) + ZEROIFNULL(I.QUAL_INSP_QTY) + ZEROIFNULL(I.RSVR_QTY) + ZEROIFNULL(I.RSTR_QTY) + ZEROIFNULL(I.STK_RET_QTY)) AS FACILITY_UNRESTRICTED_QTY

    , ZEROIFNULL(IP.IN_PROC_QTY) AS IN_PROCESS_QTY
    , ZEROIFNULL(OO.OPEN_CNFRM_QTY) AS OPEN_CONFIRMED_QTY
    , ZEROIFNULL(RO.OPEN_CNFRM_QTY) AS RO_OPEN_CONFIRMED_QTY
    , ZEROIFNULL(SA.OPEN_CNFRM_QTY) AS SA_OPEN_CONFIRMED_QTY

    , ZEROIFNULL(OO.PAST_DUE_QTY) AS PAST_DUE_QTY

    , IN_PROCESS_QTY + OPEN_CONFIRMED_QTY + RO_OPEN_CONFIRMED_QTY + SA_OPEN_CONFIRMED_QTY + UNCONFIRMED_QTY AS FACILITY_REQTS_QTY
    , FACILITY_UNRESTRICTED_QTY - FACILITY_REQTS_QTY AS FACILITY_NET_INVENTORY

    , ZEROIFNULL(OO.UNCNFRM_QTY) AS UNCONFIRMED_QTY
    , ZEROIFNULL(RO.UNCNFRM_QTY) AS RO_UNCONFIRMED_QTY
    , ZEROIFNULL(SA.UNCNFRM_QTY) AS SA_UNCONFIRMED_QTY

    , CASE WHEN UNCONFIRMED_QTY > 0 OR ZEROIFNULL(OO.PAST_DUE_QTY) > 0 THEN 'Y' ELSE 'N' END AS NEED_INBOUND_IND
    , SUM(FACILITY_UNRESTRICTED_QTY) OVER (PARTITION BY I.MATL_ID) AS NETWORK_UNRESTRICTED_QTY
    , SUM(FACILITY_REQTS_QTY) OVER (PARTITION BY I.MATL_ID) AS NETWORK_REQTS_QTY
    , CASE WHEN NETWORK_REQTS_QTY <= NETWORK_UNRESTRICTED_QTY AND NEED_INBOUND_IND = 'Y' THEN 'Y' ELSE 'N' END AS FACILITY_IMBALANCE_IND
    , CASE
        WHEN NETWORK_UNRESTRICTED_QTY > NETWORK_REQTS_QTY
            THEN MAX(NEED_INBOUND_IND) OVER (PARTITION BY I.MATL_ID)
        ELSE 'N'
        END AS NETWORK_IMBALANCE_IND

FROM NA_BI_VWS.FACL_MATL_INV I

    INNER JOIN GDYR_VWS.FACILITY_MATL FM
        ON FM.FACILITY_ID = I.FACILITY_ID
        AND FM.MATL_ID = I.MATL_ID
        AND FM.ORIG_SYS_ID = 2
        AND FM.EXP_DT = CAST('5555-12-31' AS DATE)

    INNER JOIN GDYR_BI_vWS.NAT_MATL_HIER_DESCR_EN_cURR M
        ON M.MATL_ID = I.MATL_ID

    INNER JOIN GDYR_BI_VWS.NAT_FACILITY_EN_CURR F
        ON F.FACILITY_ID = I.FACILITY_ID
        AND F.SALES_ORG_CD IN ('N306', 'N316', 'N326')
        AND F.DISTR_CHAN_CD = '81'

    LEFT OUTER JOIN (
            SELECT
                MATL_ID
                , DELIV_LINE_FACILITY_ID
                , SUM(DELIV_QTY) AS IN_PROC_QTY

            FROM NA_BI_VWS.DELIVERY_DETAIL_CURR D

            WHERE
                D.DELIV_CAT_ID = 'J'
                AND D.ACTL_GOODS_ISS_DT IS NULL

            GROUP BY
                MATL_ID
                , DELIV_LINE_FACILITY_ID
            ) IP
        ON IP.MATL_ID = I.MATL_ID
        AND IP.DELIV_LINE_FACILITY_ID = I.FACILITY_ID

    LEFT OUTER JOIN (
            SELECT
                OD.MATL_ID
                , OD.FACILITY_ID
                , SUM(OOL.OPEN_CNFRM_QTY) AS OPEN_CNFRM_QTY
                , SUM(OOL.UNCNFRM_QTY + OOL.BACK_ORDER_QTY) AS UNCNFRM_QTY
                , SUM(CASE WHEN OD.FRST_RDD <= CURRENT_DATE THEN OOL.OPEN_CNFRM_QTY + OOL.UNCNFRM_QTY + OOL.BACK_ORDER_QTY ELSE 0 END) AS PAST_DUE_QTY

            FROM NA_BI_vWS.OPEN_ORDER_SCHDLN_CURR OOL

                INNER JOIN NA_BI_VWS.ORDER_DETAIL OD
                    ON OD.ORDER_FISCAL_YR = OOL.ORDER_FISCAL_YR
                    AND OD.ORDER_ID = OOL.ORDER_ID
                    AND OD.ORDER_LINE_NBR = OOL.ORDER_LINE_NBR
                    AND OD.SCHED_LINE_NBR = OOL.SCHED_LINE_NBR
                    AND OD.EXP_DT = CAST('5555-12-31' AS DATE)
                    AND OD.ORDER_CAT_ID = 'C'
                    AND OD.RO_PO_TYPE_IND = 'N'

            WHERE
                OD.PLN_MATL_AVL_DT < CURRENT_DATE + 29

            GROUP BY
                OD.MATL_ID
                , OD.FACILITY_ID
            ) OO
        ON OO.MATL_ID = I.MATL_ID
        AND OO.FACILITY_ID = I.FACILITY_ID

    LEFT OUTER JOIN (
            SELECT
                OD.MATL_ID
                , OD.FACILITY_ID
                , SUM(OOL.OPEN_CNFRM_QTY) AS OPEN_CNFRM_QTY
                , SUM(OOL.UNCNFRM_QTY + OOL.BACK_ORDER_QTY) AS UNCNFRM_QTY

            FROM NA_BI_vWS.OPEN_ORDER_SCHDLN_CURR OOL

                INNER JOIN NA_BI_VWS.ORDER_DETAIL OD
                    ON OD.ORDER_FISCAL_YR = OOL.ORDER_FISCAL_YR
                    AND OD.ORDER_ID = OOL.ORDER_ID
                    AND OD.ORDER_LINE_NBR = OOL.ORDER_LINE_NBR
                    AND OD.SCHED_LINE_NBR = OOL.SCHED_LINE_NBR
                    AND OD.EXP_DT = CAST('5555-12-31' AS DATE)
                    AND OD.ORDER_CAT_ID = 'C'
                    AND OD.RO_PO_TYPE_IND = 'Y'

            WHERE
                OD.PLN_MATL_AVL_DT < CURRENT_DATE + 29

            GROUP BY
                OD.MATL_ID
                , OD.FACILITY_ID
            ) RO
        ON RO.MATL_ID = I.MATL_ID
        AND RO.FACILITY_ID = I.FACILITY_ID

    LEFT OUTER JOIN (
            SELECT
                SDI.MATL_ID
                , SDI.FACILITY_ID
                , SUM(OOL.OPEN_CNFRM_QTY) AS OPEN_CNFRM_QTY
                , SUM(OOL.UNCNFRM_QTY + OOL.BACK_ORDER_QTY) AS UNCNFRM_QTY

            FROM NA_BI_VWS.OPEN_ORDER_SCHDLN_CURR OOL

                INNER JOIN NA_BI_VWS.NAT_SLS_DOC SD
                    ON SD.FISCAL_YR = OOL.ORDER_FISCAL_YR
                    AND SD.SLS_DOC_ID = OOL.ORDER_ID
                    AND SD.EXP_DT = CAST('5555-12-31' AS DATE)
                    AND SD.SD_DOC_CTGY_CD = 'E'
                    AND SD.SRC_CRT_DT BETWEEN CURRENT_DATE-180 AND CURRENT_DATE

                INNER JOIN NA_BI_VWS.NAT_SLS_DOC_ITM SDI
                    ON SDI.FISCAL_YR = OOL.ORDER_FISCAL_YR
                    AND SDI.SLS_DOC_ID = OOL.ORDER_ID
                    AND SDI.SLS_DOC_ITM_ID = OOL.ORDER_LINE_NBR
                    AND SDI.EXP_DT = CAST('5555-12-31' AS DATE)
                    AND SDI.SRC_CRT_TS BETWEEN CURRENT_TIMESTAMP - CAST(180 AS INTERVAL DAY(4)) AND CURRENT_TIMESTAMP

                INNER JOIN GDYR_BI_VWS.NAT_FACILITY_EN_CURR F
                    ON F.FACILITY_ID = SDI.FACILITY_ID
                    AND F.SALES_ORG_CD IN ('N306', 'N316', 'N326')
                    AND F.DISTR_CHAN_CD = '81'

                INNER JOIN GDYR_BI_VWS.NAT_MATL_CURR M
                    ON M.MATL_ID = SDI.MATL_ID

                INNER JOIN NA_BI_VWS.NAT_SLS_DOC_SCHD_LN SL
                    ON SL.FISCAL_YR = OOL.ORDER_FISCAL_YR
                    AND SL.SLS_DOC_ID = OOL.ORDER_ID
                    AND SL.SLS_DOC_ITM_ID = OOL.ORDER_LINE_NBR
                    AND SL.SCHD_LN_ID = OOL.SCHED_LINE_NBR
                    AND SL.EXP_DT = CAST('5555-12-31' AS DATE)

            WHERE
                SL.MATL_AVAIL_DT BETWEEN CURRENT_DATE-90 AND CURRENT_DATE+180
                AND M.PBU_NBR IN ('01', '03')

            GROUP BY
                SDI.MATL_ID
                , SDI.FACILITY_ID
            ) SA
        ON SA.MATL_ID = I.MATL_ID
        AND SA.FACILITY_ID = I.FACILITY_ID

    LEFT OUTER JOIN (
            SELECT
                P.MATL_ID
                , P.FACILITY_ID
                , SUM(CASE WHEN P.PROD_WK = 0 THEN P.PLN_QTY ELSE 0 END) AS WK0_PLN_QTY
                , SUM(CASE WHEN P.PROD_WK = 1 THEN P.PLN_QTY ELSE 0 END) AS WK1_PLN_QTY
                , SUM(CASE WHEN P.PROD_WK = 2 THEN P.PLN_QTY ELSE 0 END) AS WK2_PLN_QTY

            FROM (

            SELECT
                PP.PLN_MATL_ID AS MATL_ID
                , PP.FACILITY_ID
                , 0 AS PROD_WK
                , PP.PLN_QTY

            FROM GDYR_VWS.PROD_PLN PP

            WHERE
                PP.SBU_ID = 2
                AND CAST(PP.PROD_WK_DT-3 AS DATE) BETWEEN PP.EFF_DT AND PP.EXP_DT
                AND PP.PLN_MATL_ID = '000000000000019032'
                AND PP.PROD_PLN_CD IN ('0', '7')
                AND PP.PROD_WK_DT = (SELECT BEGIN_DT+1 FROM GDYR_BI_VWS.GDYR_CAL WHERE DAY_DATE = CURRENT_DATE)

            UNION ALL

            SELECT
                PP.PLN_MATL_ID
                , PP.FACILITY_ID
                , CASE
                    WHEN PP.PROD_WK_DT - CURRENT_DATE < 7
                        THEN 1
                    WHEN PP.PROD_WK_DT - CURRENT_DATE BETWEEN 7 AND 14
                        THEN 2
                    END AS PROD_WK
                , PP.PLN_QTY

            FROM GDYR_VWS.PROD_PLN PP

            WHERE
                PP.SBU_ID = 2
                AND PP.EXP_DT = CAST('5555-12-31' AS DATE)
                AND PP.PLN_MATL_ID = '000000000000019032'
                AND PP.PROD_PLN_CD IN ('0', '7')
                AND PP.PROD_WK_DT BETWEEN CURRENT_DATE AND CURRENT_DATE+14

                ) P

            GROUP BY
                P.MATL_ID
                , P.FACILITY_ID
            ) PP
        ON PP.MATL_ID = I.MATL_ID
        AND PP.FACILITY_ID = I.FACILITY_ID

WHERE
    I.DAY_DT = CURRENT_DATE-1
    AND M.PBU_NBR = '03'

ORDER BY
    I.MATL_ID
    , I.FACILITY_ID

