SELECT
    DAY_CLSC_DATE DAY_DATE
    , REPL_OE
    , SALES_ORG_CD
    , DISTR_CHAN_CD
    , CUST_GRP_ID
    , OWN_CUST_ID
    , OWN_CUST_NAME
    , MATL_NO
    , MATL_DESCR
    , PBU_NBR
    , PBU_DESCR
    , SUM(NET_SHP_DY_QTY) SHIP_QTY
    , SUM(NET_SHP_MTD_CUR_DY_QTY) SHIP_MTD_QTY
    , SUM(CNFRM_PRI_CUR_MTH_CUR_DY_QTY) CNFRM_MTD_QTY
    , SUM(IN_PROC_PRI_CUR_MTH_CUR_DY_QTY) INPROC_MTD_QTY
    , SUM(WRKNG_PLCD_CUR_DY_QTY) WRKNG_QTY
    , SUM(UNCNFRM_TOT_CUR_DY_QTY) UNCNFRM_MTD_QTY
    , SUM(BACK_ORDER_TOT_CUR_DY_QTY) BACKORDER_MTD_QTY
    , SUM(WAIT_LIST_DEFER_OTHER_TOT_CUR_DY_QTY) WAITLIST_MTD_QTY
    , SUM(SHP_WRKNG_DOD_GAIN_LOSS_QTY) SHP_WRKNG_DOD_GAIN_LOSS_QTY
    , SUM(DOD_CHG_TOT_QTY) DOD_CHG_TOT_QTY
    , SUM(DOD_CHG_CNCL_QTY) DOD_CHG_CNCL_QTY
    , SUM(DOD_CHG_CSTMR_QTY) DOD_CHG_CSTMR_QTY
    , SUM(DOD_CHG_LATE_ORD_LN_QTY) DOD_CHG_LATE_ORD_LN_QTY
    , SUM(DOD_CHG_SP_TOT_QTY) DOD_CHG_SP_TOT_QTY
    , SUM(DOD_CHG_SP_UNCNFRM_QTY) DOD_CHG_SP_UNCNFRM_QTY
    , SUM(DOD_CHG_SP_BACK_ORDER_QTY) DOD_CHG_SP_BACK_ORDER_QTY
    , SUM(DOD_CHG_SP_WAIT_LIST_DEFER_OTHER_QTY) DOD_CHG_SP_WAIT_LIST_DEFER_OTHER_QTY
    , SUM(DOD_CHG_SP_MVD_QTY) DOD_CHG_SP_MVD_QTY
    , SUM(DOD_CHG_UNDFND_QTY) DOD_CHG_UNDFND_QTY

FROM (

    SELECT
        COALESCE(SHP.DAY_DATE, SHPPR.DAY_DATE, OO.DAY_DATE, OOPR.DAY_DATE, IP.DAY_DATE, IPPR.DAY_DATE) DAY_CLSC_DATE
        , COALESCE(SHP.ORDER_FISCAL_YR, SHPPR.ORDER_FISCAL_YR, OO.ORDER_FISCAL_YR, OOPR.ORDER_FISCAL_YR, IP.ORDER_FISCAL_YR, IPPR.ORDER_FISCAL_YR) ORDER_FISCAL_CLSC_YR
        , COALESCE(SHP.ORDER_ID, SHPPR.ORDER_ID, OO.ORDER_ID, OOPR.ORDER_ID, IP.ORDER_ID, IPPR.ORDER_ID) ORDER_CLSC_ID
        , COALESCE(SHP.ORDER_LINE_NBR, SHPPR.ORDER_LINE_NBR, OO.ORDER_LINE_NBR, OOPR.ORDER_LINE_NBR, IP.ORDER_LINE_NBR, IPPR.ORDER_LINE_NBR) ORDER_LINE_CLSC_NBR
        , MAX(COALESCE(SHP.ORDER_LN_CRT_DT, OO.ORDER_LN_CRT_DT, IP.ORDER_LN_CRT_DT, CAST('1900-01-01' AS DATE))) ORDER_LN_CRT_CUR_DY_DT
        , MAX(COALESCE(SHPPR.ORDER_LN_CRT_DT, OOPR.ORDER_LN_CRT_DT, IPPR.ORDER_LN_CRT_DT, CAST('1900-01-01' AS DATE))) ORDER_LN_CRT_PRI_DY_DT
        , MAX(COALESCE(SHP.REJ_REAS_ID, OO.REJ_REAS_ID, IP.REJ_REAS_ID, '')) REJ_REAS_CUR_DY_ID
        , MAX(COALESCE(SHPPR.REJ_REAS_ID, OOPR.REJ_REAS_ID, IPPR.REJ_REAS_ID, '')) REJ_REAS_PRI_DY_ID
        , MAX(COALESCE(SHP.CUST_RDD, OO.CUST_RDD, IP.CUST_RDD, CAST('1900-01-01' AS DATE))) CUST_RDD_CUR_DY_DT
        , MAX(COALESCE(SHPPR.CUST_RDD, OOPR.CUST_RDD, IPPR.CUST_RDD, CAST('1900-01-01' AS DATE))) CUST_RDD_PRI_DY_DT
        , MAX(COALESCE(SHP.ORD_PLCD_CUR_DY_FLG, OO.ORD_PLCD_CUR_DY_FLG, IP.ORD_PLCD_CUR_DY_FLG, '')) ORD_PLCD_CUR_DY_CLSC_FLG
        , MAX(CASE
                WHEN CUST.SALES_ORG_CD IN ('N301', 'N311', 'N321', 'N307', 'N317', 'N336')
                    OR (
                        CUST.SALES_ORG_CD IN ('N303', 'N313', 'N323')
                        AND CUST.DISTR_CHAN_CD IN ('30', '31')
                        )
                    THEN 'Replacement'
                ELSE 'OE'
                END) REPL_OE
        , MAX(CUST.SALES_ORG_CD) SALES_ORG_CD
        , MAX(CUST.DISTR_CHAN_CD) DISTR_CHAN_CD
        , MAX(CUST.CUST_GRP_ID) CUST_GRP_ID
        , MAX(CUST.OWN_CUST_ID) OWN_CUST_ID
        , MAX(CUST.OWN_CUST_NAME) OWN_CUST_NAME
        , MAX(MATL.MATL_NO_8) MATL_NO
        , MAX(MATL.MATL_NO_8 || ' - ' || MATL.DESCR) MATL_DESCR
        , MAX(MATL.PBU_NBR) PBU_NBR
        , MAX(MATL.PBU_NBR || ' - ' || MATL.PBU_NAME) PBU_DESCR
        , ZEROIFNULL(SUM(SHP.NET_SHP_DY_QTY)) NET_SHP_DY_QTY
        , ZEROIFNULL(SUM(SHP.NET_SHP_MTD_QTY)) NET_SHP_MTD_CUR_DY_QTY
        , ZEROIFNULL(SUM(SHPPR.NET_SHP_MTD_QTY)) NET_SHP_MTD_PRI_DY_QTY
        , ZEROIFNULL(SUM(OO.CNFRM_PRI_CUR_MTH_QTY)) CNFRM_PRI_CUR_MTH_CUR_DY_QTY
        , ZEROIFNULL(SUM(OOPR.CNFRM_PRI_CUR_MTH_QTY)) CNFRM_PRI_CUR_MTH_PRI_DY_QTY
        , ZEROIFNULL(SUM(IP.IN_PROC_PRI_CUR_MTH_QTY)) IN_PROC_PRI_CUR_MTH_CUR_DY_QTY
        , ZEROIFNULL(SUM(IPPR.IN_PROC_PRI_CUR_MTH_QTY)) IN_PROC_PRI_CUR_MTH_PRI_DY_QTY
        , ZEROIFNULL(SUM(OO.CNFRM_NXT_MTH_QTY)) CNFRM_NXT_MTH_CUR_DY_QTY
        , ZEROIFNULL(SUM(OOPR.CNFRM_NXT_MTH_QTY)) CNFRM_NXT_MTH_PRI_DY_QTY
        , ZEROIFNULL(SUM(IP.IN_PROC_NXT_MTH_QTY)) IN_PROC_NXT_MTH_CUR_DY_QTY
        , ZEROIFNULL(SUM(IPPR.IN_PROC_NXT_MTH_QTY)) IN_PROC_NXT_MTH_PRI_DY_QTY
        , ZEROIFNULL(SUM(OO.CNFRM_TOT_QTY)) CNFRM_TOT_CUR_DY_QTY
        , ZEROIFNULL(SUM(OOPR.CNFRM_TOT_QTY)) CNFRM_TOT_PRI_DY_QTY
        , ZEROIFNULL(SUM(OO.UNCNFRM_TOT_QTY)) UNCNFRM_TOT_CUR_DY_QTY
        , ZEROIFNULL(SUM(OOPR.UNCNFRM_TOT_QTY)) UNCNFRM_TOT_PRI_DY_QTY
        , ZEROIFNULL(SUM(OO.BACK_ORDER_TOT_QTY)) BACK_ORDER_TOT_CUR_DY_QTY
        , ZEROIFNULL(SUM(OOPR.BACK_ORDER_TOT_QTY)) BACK_ORDER_TOT_PRI_DY_QTY
        , ZEROIFNULL(SUM(OO.WAIT_LIST_TOT_QTY + OO.DEFER_TOT_QTY + OO.OTHR_OPEN_TOT_QTY)) WAIT_LIST_DEFER_OTHER_TOT_CUR_DY_QTY
        , ZEROIFNULL(SUM(OOPR.WAIT_LIST_TOT_QTY + OOPR.DEFER_TOT_QTY + OOPR.OTHR_OPEN_TOT_QTY)) WAIT_LIST_DEFER_OTHER_TOT_PRI_DY_QTY
        , ZEROIFNULL(SUM(IP.IN_PROC_TOT_QTY)) IN_PROC_TOT_CUR_DY_QTY
        , ZEROIFNULL(SUM(IPPR.IN_PROC_TOT_QTY)) IN_PROC_TOT_PRI_DY_QTY
        , CASE
            WHEN ORD_PLCD_CUR_DY_CLSC_FLG = 'Y'
                THEN CNFRM_PRI_CUR_MTH_CUR_DY_QTY + IN_PROC_PRI_CUR_MTH_CUR_DY_QTY
            ELSE 0
            END WRKNG_PLCD_CUR_DY_QTY
        , CASE
            WHEN EXTRACT(DAY FROM DAY_CLSC_DATE) = 1
                THEN (CNFRM_PRI_CUR_MTH_CUR_DY_QTY + IN_PROC_PRI_CUR_MTH_CUR_DY_QTY + NET_SHP_MTD_CUR_DY_QTY) - (CNFRM_PRI_CUR_MTH_PRI_DY_QTY + CNFRM_NXT_MTH_PRI_DY_QTY + IN_PROC_PRI_CUR_MTH_PRI_DY_QTY + IN_PROC_NXT_MTH_PRI_DY_QTY)
            ELSE (CNFRM_PRI_CUR_MTH_CUR_DY_QTY + IN_PROC_PRI_CUR_MTH_CUR_DY_QTY + NET_SHP_MTD_CUR_DY_QTY) - (CNFRM_PRI_CUR_MTH_PRI_DY_QTY + IN_PROC_PRI_CUR_MTH_PRI_DY_QTY + NET_SHP_MTD_PRI_DY_QTY)
            END SHP_WRKNG_DOD_GAIN_LOSS_QTY
        , SHP_WRKNG_DOD_GAIN_LOSS_QTY - WRKNG_PLCD_CUR_DY_QTY DOD_CHG_TOT_QTY
        , CASE
            WHEN ORD_PLCD_CUR_DY_CLSC_FLG <> 'Y'
                AND ORDER_LN_CRT_PRI_DY_DT <> CAST('1900-01-01' AS DATE)
                AND REJ_REAS_CUR_DY_ID <> REJ_REAS_PRI_DY_ID
                THEN DOD_CHG_TOT_QTY
            ELSE 0
            END DOD_CHG_CNCL_QTY
        , CASE
            WHEN ORD_PLCD_CUR_DY_CLSC_FLG <> 'Y'
                AND ORDER_LN_CRT_PRI_DY_DT <> CAST('1900-01-01' AS DATE)
                AND CUST_RDD_CUR_DY_DT <> CUST_RDD_PRI_DY_DT
                AND REJ_REAS_CUR_DY_ID = REJ_REAS_PRI_DY_ID
                THEN DOD_CHG_TOT_QTY
            ELSE 0
            END DOD_CHG_CSTMR_QTY
        , CASE
            WHEN ORD_PLCD_CUR_DY_CLSC_FLG <> 'Y'
                AND ORDER_LN_CRT_PRI_DY_DT = CAST('1900-01-01' AS DATE)
                THEN DOD_CHG_TOT_QTY
            ELSE 0
            END DOD_CHG_LATE_ORD_LN_QTY
        , CASE
            WHEN ORD_PLCD_CUR_DY_CLSC_FLG <> 'Y'
                AND ORDER_LN_CRT_PRI_DY_DT = ORDER_LN_CRT_CUR_DY_DT
                AND REJ_REAS_CUR_DY_ID = REJ_REAS_PRI_DY_ID
                AND CUST_RDD_CUR_DY_DT = CUST_RDD_PRI_DY_DT
                THEN DOD_CHG_TOT_QTY
            ELSE 0
            END DOD_CHG_SP_TOT_QTY
        , CASE
            WHEN DOD_CHG_SP_TOT_QTY <> 0
                THEN UNCNFRM_TOT_CUR_DY_QTY - UNCNFRM_TOT_PRI_DY_QTY
            ELSE 0
            END DOD_CHG_SP_UNCNFRM_QTY
        , CASE
            WHEN DOD_CHG_SP_TOT_QTY <> 0
                THEN BACK_ORDER_TOT_CUR_DY_QTY - BACK_ORDER_TOT_PRI_DY_QTY
            ELSE 0
            END DOD_CHG_SP_BACK_ORDER_QTY
        , CASE
            WHEN DOD_CHG_SP_TOT_QTY <> 0
                THEN WAIT_LIST_DEFER_OTHER_TOT_CUR_DY_QTY - WAIT_LIST_DEFER_OTHER_TOT_PRI_DY_QTY
            ELSE 0
            END DOD_CHG_SP_WAIT_LIST_DEFER_OTHER_QTY
        , DOD_CHG_SP_TOT_QTY - (DOD_CHG_SP_UNCNFRM_QTY + DOD_CHG_SP_BACK_ORDER_QTY + DOD_CHG_SP_WAIT_LIST_DEFER_OTHER_QTY) DOD_CHG_SP_MVD_QTY
        , DOD_CHG_TOT_QTY - (DOD_CHG_CNCL_QTY + DOD_CHG_CSTMR_QTY + DOD_CHG_LATE_ORD_LN_QTY + DOD_CHG_SP_TOT_QTY) DOD_CHG_UNDFND_QTY

    FROM (

        SELECT
            CAL.DAY_DATE
            , DD.ORDER_FISCAL_YR
            , DD.ORDER_ID
            , DD.ORDER_LINE_NBR
            , MAX(DD.SHIP_TO_CUST_ID) SHIP_TO_CUST_ID
            , MAX(DD.MATL_ID) MATL_ID
            , MAX(ODA.ORDER_LN_CRT_DT) ORDER_LN_CRT_DT
            , MAX(ODA.REJ_REAS_ID) REJ_REAS_ID
            , MAX(ODA.CUST_RDD) CUST_RDD
            , MAX(CASE
                    WHEN ODA.ORDER_DT = CAL.DAY_DATE
                        THEN 'Y'
                    ELSE 'N'
                    END) ORD_PLCD_CUR_DY_FLG
            , SUM(CASE
                    WHEN DD.ACTL_GOODS_ISS_DT = CAL.DAY_DATE
                        THEN DD.RPT_DELIV_QTY
                    ELSE 0
                    END) NET_SHP_DY_QTY
            , SUM(DD.RPT_DELIV_QTY) NET_SHP_MTD_QTY

        FROM NA_VWS.DELIV_DTL DD

            INNER JOIN GDYR_BI_VWS.GDYR_CAL CAL
                ON CAL.DAY_DATE BETWEEN DD.EFF_DT AND DD.EXP_DT

            LEFT JOIN (

                SELECT
                    CAL2.DAY_DATE
                    , OD2.ORDER_FISCAL_YR
                    , OD2.ORDER_ID
                    , OD2.ORDER_LINE_NBR
                    , MAX(OD2.ORDER_DT) ORDER_DT
                    , MAX(OD2.ORDER_LN_CRT_DT) ORDER_LN_CRT_DT
                    , MAX(OD2.REJ_REAS_ID) REJ_REAS_ID
                    , MAX(OD2.CUST_RDD) CUST_RDD

                FROM NA_BI_VWS.ORDER_DETAIL OD2

                INNER JOIN GDYR_BI_VWS.GDYR_CAL CAL2
                    ON CAL2.DAY_DATE BETWEEN OD2.EFF_DT AND OD2.EXP_DT

                INNER JOIN NA_VWS.DELIV_DTL DD2
                    ON OD2.ORDER_FISCAL_YR = DD2.ORDER_FISCAL_YR
                        AND OD2.ORDER_ID = DD2.ORDER_ID
                        AND OD2.ORDER_LINE_NBR = DD2.ORDER_LINE_NBR
                        AND CAL2.DAY_DATE BETWEEN DD2.EFF_DT AND DD2.EXP_DT

                WHERE
                    DD2.ACTL_GOODS_ISS_DT BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1 AND ADD_MONTHS((CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1, 1) - 1
                    AND CAL2.DAY_DATE BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1 AND CURRENT_DATE - 1

                GROUP BY 1, 2, 3, 4

                ) ODA
                ON CAL.DAY_DATE = ODA.DAY_DATE
                    AND DD.ORDER_FISCAL_YR = ODA.ORDER_FISCAL_YR
                    AND DD.ORDER_ID = ODA.ORDER_ID
                    AND DD.ORDER_LINE_NBR = ODA.ORDER_LINE_NBR

        WHERE
            DD.ACTL_GOODS_ISS_DT BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1 AND ADD_MONTHS((CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1, 1) - 1
            AND CAL.DAY_DATE BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1 AND CURRENT_DATE - 1

        GROUP BY 1, 2, 3, 4
        ) SHP

    FULL JOIN (
        SELECT
            CAL.DAY_DATE + 1 DAY_DATE
            , DD.ORDER_FISCAL_YR
            , DD.ORDER_ID
            , DD.ORDER_LINE_NBR
            , MAX(DD.SHIP_TO_CUST_ID) SHIP_TO_CUST_ID
            , MAX(DD.MATL_ID) MATL_ID
            , MAX(ODA.ORDER_LN_CRT_DT) ORDER_LN_CRT_DT
            , MAX(ODA.REJ_REAS_ID) REJ_REAS_ID
            , MAX(ODA.CUST_RDD) CUST_RDD
            , SUM(DD.RPT_DELIV_QTY) NET_SHP_MTD_QTY

        FROM NA_VWS.DELIV_DTL DD

            INNER JOIN GDYR_BI_VWS.GDYR_CAL CAL
                ON CAL.DAY_DATE BETWEEN DD.EFF_DT AND DD.EXP_DT

            LEFT JOIN (
                SELECT
                    CAL2.DAY_DATE
                    , OD2.ORDER_FISCAL_YR
                    , OD2.ORDER_ID
                    , OD2.ORDER_LINE_NBR
                    , MAX(OD2.ORDER_DT) ORDER_DT
                    , MAX(OD2.ORDER_LN_CRT_DT) ORDER_LN_CRT_DT
                    , MAX(OD2.REJ_REAS_ID) REJ_REAS_ID
                    , MAX(OD2.CUST_RDD) CUST_RDD

                FROM NA_BI_VWS.ORDER_DETAIL OD2

                INNER JOIN GDYR_BI_VWS.GDYR_CAL CAL2
                    ON CAL2.DAY_DATE BETWEEN OD2.EFF_DT AND OD2.EXP_DT

                INNER JOIN NA_VWS.DELIV_DTL DD2
                    ON OD2.ORDER_FISCAL_YR = DD2.ORDER_FISCAL_YR
                        AND OD2.ORDER_ID = DD2.ORDER_ID
                        AND OD2.ORDER_LINE_NBR = DD2.ORDER_LINE_NBR
                        AND CAL2.DAY_DATE BETWEEN DD2.EFF_DT AND DD2.EXP_DT

                WHERE
                    DD2.ACTL_GOODS_ISS_DT BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1 AND ADD_MONTHS((CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1, 1) - 1
                    AND CAL2.DAY_DATE BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1 AND CURRENT_DATE - 2

                GROUP BY 1, 2, 3, 4
                ) ODA
                ON CAL.DAY_DATE = ODA.DAY_DATE
                    AND DD.ORDER_FISCAL_YR = ODA.ORDER_FISCAL_YR
                    AND DD.ORDER_ID = ODA.ORDER_ID
                    AND DD.ORDER_LINE_NBR = ODA.ORDER_LINE_NBR

        WHERE
            DD.ACTL_GOODS_ISS_DT BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1 AND ADD_MONTHS((CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1, 1) - 1
            AND CAL.DAY_DATE BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1 AND CURRENT_DATE - 2

        GROUP BY 1, 2, 3, 4
        ) SHPPR
        ON SHP.DAY_DATE = SHPPR.DAY_DATE
            AND SHP.ORDER_FISCAL_YR = SHPPR.ORDER_FISCAL_YR
            AND SHP.ORDER_ID = SHPPR.ORDER_ID
            AND SHP.ORDER_LINE_NBR = SHPPR.ORDER_LINE_NBR

    FULL JOIN (
        SELECT
            CAL.DAY_DATE
            , OD.ORDER_FISCAL_YR
            , OD.ORDER_ID
            , OD.ORDER_LINE_NBR
            , MAX(OD.SHIP_TO_CUST_ID) SHIP_TO_CUST_ID
            , MAX(OD.MATL_ID) MATL_ID
            , MAX(OD.ORDER_LN_CRT_DT) ORDER_LN_CRT_DT
            , MAX(OD.REJ_REAS_ID) REJ_REAS_ID
            , MAX(OD.CUST_RDD) CUST_RDD
            , MAX(CASE
                    WHEN OD.ORDER_DT = CAL.DAY_DATE
                        THEN 'Y'
                    ELSE 'N'
                    END) ORD_PLCD_CUR_DY_FLG
            , SUM(CASE
                    WHEN TRUNC(OD.PLN_GOODS_ISS_DT, 'MM') <= TRUNC(CAL.DAY_DATE, 'MM')
                        THEN OSL.RPT_OPEN_CNFRM_QTY
                    ELSE 0
                    END) CNFRM_PRI_CUR_MTH_QTY
            , SUM(CASE
                    WHEN TRUNC(OD.PLN_GOODS_ISS_DT, 'MM') = ADD_MONTHS(TRUNC(CAL.DAY_DATE, 'MM'), 1)
                        THEN OSL.RPT_OPEN_CNFRM_QTY
                    ELSE 0
                    END) CNFRM_NXT_MTH_QTY
            , ZEROIFNULL(SUM(OSL.RPT_OPEN_CNFRM_QTY)) CNFRM_TOT_QTY
            , ZEROIFNULL(SUM(OSL.RPT_UNCNFRM_QTY)) UNCNFRM_TOT_QTY
            , ZEROIFNULL(SUM(OSL.RPT_BACK_ORDER_QTY)) BACK_ORDER_TOT_QTY
            , ZEROIFNULL(SUM(OSL.RPT_DEFER_QTY)) DEFER_TOT_QTY
            , ZEROIFNULL(SUM(OSL.RPT_WAIT_LIST_QTY)) WAIT_LIST_TOT_QTY
            , ZEROIFNULL(SUM(OSL.RPT_OTHR_ORDER_QTY)) OTHR_OPEN_TOT_QTY

        FROM NA_VWS.OPEN_ORDER_SCHDLN OSL

            INNER JOIN GDYR_BI_VWS.GDYR_CAL CAL
                ON CAL.DAY_DATE BETWEEN OSL.EFF_DT AND OSL.EXP_DT

            INNER JOIN NA_BI_VWS.ORDER_DETAIL OD
                ON OSL.ORDER_FISCAL_YR = OD.ORDER_FISCAL_YR
                    AND OSL.ORDER_ID = OD.ORDER_ID
                    AND OSL.ORDER_LINE_NBR = OD.ORDER_LINE_NBR
                    AND OSL.SCHED_LINE_NBR = OD.SCHED_LINE_NBR
                    AND CAL.DAY_DATE BETWEEN OD.EFF_DT AND OD.EXP_DT

        WHERE
            CAL.DAY_DATE BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1 AND CURRENT_DATE - 1
            AND OD.RO_PO_TYPE_IND = 'N'

        GROUP BY 1, 2, 3, 4

        HAVING CNFRM_TOT_QTY + UNCNFRM_TOT_QTY + BACK_ORDER_TOT_QTY + DEFER_TOT_QTY + WAIT_LIST_TOT_QTY + OTHR_OPEN_TOT_QTY <> 0
        ) OO
        ON COALESCE(SHP.DAY_DATE, SHPPR.DAY_DATE) = OO.DAY_DATE
            AND COALESCE(SHP.ORDER_FISCAL_YR, SHPPR.ORDER_FISCAL_YR) = OO.ORDER_FISCAL_YR
            AND COALESCE(SHP.ORDER_ID, SHPPR.ORDER_ID) = OO.ORDER_ID
            AND COALESCE(SHP.ORDER_LINE_NBR, SHPPR.ORDER_LINE_NBR) = OO.ORDER_LINE_NBR

    FULL JOIN (
        SELECT
            CAL.DAY_DATE + 1 DAY_DATE
            , OD.ORDER_FISCAL_YR
            , OD.ORDER_ID
            , OD.ORDER_LINE_NBR
            , MAX(OD.SHIP_TO_CUST_ID) SHIP_TO_CUST_ID
            , MAX(OD.MATL_ID) MATL_ID
            , MAX(OD.ORDER_LN_CRT_DT) ORDER_LN_CRT_DT
            , MAX(OD.REJ_REAS_ID) REJ_REAS_ID
            , MAX(OD.CUST_RDD) CUST_RDD
            , SUM(CASE
                    WHEN TRUNC(OD.PLN_GOODS_ISS_DT, 'MM') <= TRUNC(CAL.DAY_DATE, 'MM')
                        THEN OSL.RPT_OPEN_CNFRM_QTY
                    ELSE 0
                    END) CNFRM_PRI_CUR_MTH_QTY
            , SUM(CASE
                    WHEN TRUNC(OD.PLN_GOODS_ISS_DT, 'MM') = ADD_MONTHS(TRUNC(CAL.DAY_DATE, 'MM'), 1)
                        THEN OSL.RPT_OPEN_CNFRM_QTY
                    ELSE 0
                    END) CNFRM_NXT_MTH_QTY
            , ZEROIFNULL(SUM(OSL.RPT_OPEN_CNFRM_QTY)) CNFRM_TOT_QTY
            , ZEROIFNULL(SUM(OSL.RPT_UNCNFRM_QTY)) UNCNFRM_TOT_QTY
            , ZEROIFNULL(SUM(OSL.RPT_BACK_ORDER_QTY)) BACK_ORDER_TOT_QTY
            , ZEROIFNULL(SUM(OSL.RPT_DEFER_QTY)) DEFER_TOT_QTY
            , ZEROIFNULL(SUM(OSL.RPT_WAIT_LIST_QTY)) WAIT_LIST_TOT_QTY
            , ZEROIFNULL(SUM(OSL.RPT_OTHR_ORDER_QTY)) OTHR_OPEN_TOT_QTY

        FROM NA_VWS.OPEN_ORDER_SCHDLN OSL

            INNER JOIN GDYR_BI_VWS.GDYR_CAL CAL
                ON CAL.DAY_DATE BETWEEN OSL.EFF_DT AND OSL.EXP_DT

            INNER JOIN NA_BI_VWS.ORDER_DETAIL OD
                ON OSL.ORDER_FISCAL_YR = OD.ORDER_FISCAL_YR
                    AND OSL.ORDER_ID = OD.ORDER_ID
                    AND OSL.ORDER_LINE_NBR = OD.ORDER_LINE_NBR
                    AND OSL.SCHED_LINE_NBR = OD.SCHED_LINE_NBR
                    AND CAL.DAY_DATE BETWEEN OD.EFF_DT AND OD.EXP_DT

        WHERE
            CAL.DAY_DATE BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) AND CURRENT_DATE - 2
            AND OD.RO_PO_TYPE_IND = 'N'

        GROUP BY 1, 2, 3, 4

        HAVING CNFRM_TOT_QTY + UNCNFRM_TOT_QTY + BACK_ORDER_TOT_QTY + DEFER_TOT_QTY + WAIT_LIST_TOT_QTY + OTHR_OPEN_TOT_QTY <> 0
        ) OOPR
        ON COALESCE(SHP.DAY_DATE, SHPPR.DAY_DATE, OO.DAY_DATE) = OOPR.DAY_DATE
            AND COALESCE(SHP.ORDER_FISCAL_YR, SHPPR.ORDER_FISCAL_YR, OO.ORDER_FISCAL_YR) = OOPR.ORDER_FISCAL_YR
            AND COALESCE(SHP.ORDER_ID, SHPPR.ORDER_ID, OO.ORDER_ID) = OOPR.ORDER_ID
            AND COALESCE(SHP.ORDER_LINE_NBR, SHPPR.ORDER_LINE_NBR, OO.ORDER_LINE_NBR) = OOPR.ORDER_LINE_NBR

    FULL JOIN (
        SELECT
            CAL.DAY_DATE
            , DD.ORDER_FISCAL_YR
            , DD.ORDER_ID
            , DD.ORDER_LINE_NBR
            , MAX(DD.SHIP_TO_CUST_ID) SHIP_TO_CUST_ID
            , MAX(DD.MATL_ID) MATL_ID
            , MAX(ODA.ORDER_LN_CRT_DT) ORDER_LN_CRT_DT
            , MAX(ODA.REJ_REAS_ID) REJ_REAS_ID
            , MAX(ODA.CUST_RDD) CUST_RDD
            , MAX(CASE
                    WHEN ODA.ORDER_DT = CAL.DAY_DATE
                        THEN 'Y'
                    ELSE 'N'
                    END) ORD_PLCD_CUR_DY_FLG
            , SUM(CASE
                    WHEN TRUNC(DD.PLN_GOODS_MVT_DT, 'MM') <= TRUNC(CAL.DAY_DATE, 'MM')
                        THEN DIP.RPT_QTY_TO_SHIP
                    ELSE 0
                    END) IN_PROC_PRI_CUR_MTH_QTY
            , SUM(CASE
                    WHEN TRUNC(DD.PLN_GOODS_MVT_DT, 'MM') = ADD_MONTHS(TRUNC(CAL.DAY_DATE, 'MM'), 1)
                        THEN DIP.RPT_QTY_TO_SHIP
                    ELSE 0
                    END) IN_PROC_NXT_MTH_QTY
            , SUM(DIP.RPT_QTY_TO_SHIP) IN_PROC_TOT_QTY

        FROM GDYR_VWS.DELIV_IN_PROC DIP

            INNER JOIN GDYR_BI_VWS.GDYR_CAL CAL
                ON CAL.DAY_DATE BETWEEN DIP.EFF_DT AND DIP.EXP_DT

            INNER JOIN NA_VWS.DELIV_DTL DD
                ON DIP.ORDER_FISCAL_YR = DD.ORDER_FISCAL_YR
                    AND DIP.DELIV_ID = DD.DELIV_ID
                    AND DIP.DELIV_LINE_NBR = DD.DELIV_LINE_NBR
                    AND CAL.DAY_DATE BETWEEN DD.EFF_DT AND DD.EXP_DT

            LEFT JOIN (
                SELECT
                    CAL2.DAY_DATE
                    , OD2.ORDER_FISCAL_YR
                    , OD2.ORDER_ID
                    , OD2.ORDER_LINE_NBR
                    , MAX(OD2.ORDER_DT) ORDER_DT
                    , MAX(OD2.ORDER_LN_CRT_DT) ORDER_LN_CRT_DT
                    , MAX(OD2.REJ_REAS_ID) REJ_REAS_ID
                    , MAX(OD2.CUST_RDD) CUST_RDD

                FROM NA_BI_VWS.ORDER_DETAIL OD2

                INNER JOIN GDYR_BI_VWS.GDYR_CAL CAL2
                    ON CAL2.DAY_DATE BETWEEN OD2.EFF_DT AND OD2.EXP_DT

                INNER JOIN GDYR_VWS.DELIV_IN_PROC DIP2
                    ON OD2.ORDER_FISCAL_YR = DIP2.ORDER_FISCAL_YR
                        AND OD2.ORDER_ID = DIP2.ORDER_ID
                        AND OD2.ORDER_LINE_NBR = DIP2.ORDER_LINE_NBR
                        AND CAL2.DAY_DATE BETWEEN DIP2.EFF_DT AND DIP2.EXP_DT

                WHERE
                    DIP2.INTRA_CMPNY_FLG = 'N'
                    AND CAL2.DAY_DATE BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1 AND CURRENT_DATE - 1

                GROUP BY 1, 2, 3, 4
                ) ODA
                ON CAL.DAY_DATE = ODA.DAY_DATE
                    AND DD.ORDER_FISCAL_YR = ODA.ORDER_FISCAL_YR
                    AND DD.ORDER_ID = ODA.ORDER_ID
                    AND DD.ORDER_LINE_NBR = ODA.ORDER_LINE_NBR

        WHERE
            DIP.INTRA_CMPNY_FLG = 'N'
            AND CAL.DAY_DATE BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) + 1 AND CURRENT_DATE - 1
            AND DD.ACTL_GOODS_ISS_DT IS NULL

        GROUP BY 1, 2, 3, 4
        ) IP
        ON COALESCE(SHP.DAY_DATE, SHPPR.DAY_DATE, OO.DAY_DATE, OOPR.DAY_DATE) = IP.DAY_DATE
            AND COALESCE(SHP.ORDER_FISCAL_YR, SHPPR.ORDER_FISCAL_YR, OO.ORDER_FISCAL_YR, OOPR.ORDER_FISCAL_YR) = IP.ORDER_FISCAL_YR
            AND COALESCE(SHP.ORDER_ID, SHPPR.ORDER_ID, OO.ORDER_ID, OOPR.ORDER_ID) = IP.ORDER_ID
            AND COALESCE(SHP.ORDER_LINE_NBR, SHPPR.ORDER_LINE_NBR, OO.ORDER_LINE_NBR, OOPR.ORDER_LINE_NBR) = IP.ORDER_LINE_NBR

    FULL JOIN (
        SELECT
            CAL.DAY_DATE + 1 DAY_DATE
            , DD.ORDER_FISCAL_YR
            , DD.ORDER_ID
            , DD.ORDER_LINE_NBR
            , MAX(DD.SHIP_TO_CUST_ID) SHIP_TO_CUST_ID
            , MAX(DD.MATL_ID) MATL_ID
            , MAX(ODA.ORDER_LN_CRT_DT) ORDER_LN_CRT_DT
            , MAX(ODA.REJ_REAS_ID) REJ_REAS_ID
            , MAX(ODA.CUST_RDD) CUST_RDD
            , SUM(CASE
                    WHEN TRUNC(DD.PLN_GOODS_MVT_DT, 'MM') <= TRUNC(CAL.DAY_DATE, 'MM')
                        THEN DIP.RPT_QTY_TO_SHIP
                    ELSE 0
                    END) IN_PROC_PRI_CUR_MTH_QTY
            , SUM(CASE
                    WHEN TRUNC(DD.PLN_GOODS_MVT_DT, 'MM') = ADD_MONTHS(TRUNC(CAL.DAY_DATE, 'MM'), 1)
                        THEN DIP.RPT_QTY_TO_SHIP
                    ELSE 0
                    END) IN_PROC_NXT_MTH_QTY
            , SUM(DIP.RPT_QTY_TO_SHIP) IN_PROC_TOT_QTY

        FROM GDYR_VWS.DELIV_IN_PROC DIP

            INNER JOIN GDYR_BI_VWS.GDYR_CAL CAL
                ON CAL.DAY_DATE BETWEEN DIP.EFF_DT AND DIP.EXP_DT

            INNER JOIN NA_VWS.DELIV_DTL DD
                ON DIP.ORDER_FISCAL_YR = DD.ORDER_FISCAL_YR
                    AND DIP.DELIV_ID = DD.DELIV_ID
                    AND DIP.DELIV_LINE_NBR = DD.DELIV_LINE_NBR
                    AND CAL.DAY_DATE BETWEEN DD.EFF_DT AND DD.EXP_DT

            LEFT JOIN (
                SELECT
                    CAL2.DAY_DATE
                    , OD2.ORDER_FISCAL_YR
                    , OD2.ORDER_ID
                    , OD2.ORDER_LINE_NBR
                    , MAX(OD2.ORDER_DT) ORDER_DT
                    , MAX(OD2.ORDER_LN_CRT_DT) ORDER_LN_CRT_DT
                    , MAX(OD2.REJ_REAS_ID) REJ_REAS_ID
                    , MAX(OD2.CUST_RDD) CUST_RDD

                FROM NA_BI_VWS.ORDER_DETAIL OD2

                INNER JOIN GDYR_BI_VWS.GDYR_CAL CAL2
                    ON CAL2.DAY_DATE BETWEEN OD2.EFF_DT AND OD2.EXP_DT

                INNER JOIN GDYR_VWS.DELIV_IN_PROC DIP2
                    ON OD2.ORDER_FISCAL_YR = DIP2.ORDER_FISCAL_YR
                        AND OD2.ORDER_ID = DIP2.ORDER_ID
                        AND OD2.ORDER_LINE_NBR = DIP2.ORDER_LINE_NBR
                        AND CAL2.DAY_DATE BETWEEN DIP2.EFF_DT AND DIP2.EXP_DT

                WHERE
                    DIP2.INTRA_CMPNY_FLG = 'N'
                    AND CAL2.DAY_DATE BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) AND CURRENT_DATE - 2

                GROUP BY 1, 2, 3, 4
                ) ODA
                ON CAL.DAY_DATE = ODA.DAY_DATE
                    AND DD.ORDER_FISCAL_YR = ODA.ORDER_FISCAL_YR
                    AND DD.ORDER_ID = ODA.ORDER_ID
                    AND DD.ORDER_LINE_NBR = ODA.ORDER_LINE_NBR

        WHERE
            DIP.INTRA_CMPNY_FLG = 'N'
            AND CAL.DAY_DATE BETWEEN (CURRENT_DATE - 1) - EXTRACT(DAY FROM CURRENT_DATE - 1) AND CURRENT_DATE - 2
            AND DD.ACTL_GOODS_ISS_DT IS NULL

        GROUP BY 1, 2, 3, 4
        ) IPPR
        ON COALESCE(SHP.DAY_DATE, SHPPR.DAY_DATE, OO.DAY_DATE, OOPR.DAY_DATE, IP.DAY_DATE) = IPPR.DAY_DATE
            AND COALESCE(SHP.ORDER_FISCAL_YR, SHPPR.ORDER_FISCAL_YR, OO.ORDER_FISCAL_YR, OOPR.ORDER_FISCAL_YR, IP.ORDER_FISCAL_YR) = IPPR.ORDER_FISCAL_YR
            AND COALESCE(SHP.ORDER_ID, SHPPR.ORDER_ID, OO.ORDER_ID, OOPR.ORDER_ID, IP.ORDER_ID) = IPPR.ORDER_ID
            AND COALESCE(SHP.ORDER_LINE_NBR, SHPPR.ORDER_LINE_NBR, OO.ORDER_LINE_NBR, OOPR.ORDER_LINE_NBR, IP.ORDER_LINE_NBR) = IPPR.ORDER_LINE_NBR

    INNER JOIN GDYR_BI_VWS.NAT_CUST_HIER_DESCR_EN_CURR CUST
        ON COALESCE(SHP.SHIP_TO_CUST_ID, SHPPR.SHIP_TO_CUST_ID, OO.SHIP_TO_CUST_ID, OOPR.SHIP_TO_CUST_ID, IP.SHIP_TO_CUST_ID, IPPR.SHIP_TO_CUST_ID) = CUST.SHIP_TO_CUST_ID

    INNER JOIN GDYR_BI_VWS.NAT_MATL_HIER_DESCR_EN_CURR MATL
        ON COALESCE(SHP.MATL_ID, SHPPR.MATL_ID, OO.MATL_ID, OOPR.MATL_ID, IP.MATL_ID, IPPR.MATL_ID) = MATL.MATL_ID

    WHERE
        (
            CUST.SALES_ORG_CD IN ('N301', 'N311', 'N321', 'N307', 'N317', 'N336', 'N302', 'N312', 'N322')
            OR (CUST.SALES_ORG_CD IN ('N303', 'N313', 'N323')AND CUST.DISTR_CHAN_CD IN ('30', '31', '32'))
        )
        AND MATL.PBU_NBR IN ('01', '03')
        AND MATL.MKT_AREA_NBR <> '04'
        AND MATL.SUPER_BRAND_ID IN ('01', '02', '03', '05')

    GROUP BY 1, 2, 3, 4
    ) OS

GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
